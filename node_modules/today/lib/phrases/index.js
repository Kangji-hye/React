'use strict';

const Promise = require('bluebird');
const _ = require('lodash');
const retext = require('retext');
const keywords = require('retext-keywords');
const nlcstToString = require('nlcst-to-string');

const Names = new Set(require('./data/names.json'));

module.exports = {
    phrases
};

function phrases(item, cb) {
    // Always resolves, return empty object if an error
    //
    return new Promise(resolve => {
        retext()
        .use(keywords)
        .process(item, (err, file) => {
            if(err) {
                return resolve({});
            }

            let keywords = file.data.keywords.map(keyword => nlcstToString(keyword.matches[0].node));
            let keyphrases = file.data.keyphrases.map(phrase => {
                let render = phrase.matches[0].nodes.map(nlcstToString).join('');
                return _.startCase(_.toLower(render.trim()))
            });

            let names = keywords.reduce((acc, kw) => {
                kw = _.upperFirst(kw);
                Names.has(kw) && acc.push(kw)
                return acc;
            }, []);

            resolve({
                keywords,
                keyphrases,
                names
            });
        });
    })
}



